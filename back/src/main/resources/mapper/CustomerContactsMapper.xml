<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yly.crm.mapper.CustomerContactsMapper">

    <resultMap id="BaseResultMap" type="com.yly.crm.entity.CustomerContacts">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="job" jdbcType="INTEGER" property="job"/>
        <result column="source" jdbcType="INTEGER" property="source"/>
        <result column="seller" jdbcType="INTEGER" property="seller"/>
        <result column="inputUser" jdbcType="INTEGER" property="inputuser"/>
        <result column="inputTime" jdbcType="TIMESTAMP" property="inputtime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="positiveTime" jdbcType="TIMESTAMP" property="positivetime"/>
        <result column="customer_ent_id" jdbcType="INTEGER" property="customerEntId"/>
    </resultMap>

    <select id="listAllWithDictionary" resultType="com.yly.crm.dto.CustomerContactsDTO">
        select c.id as id,
        c.name as name,
        c.age as age,
        c.status as status,
        gender,
        tel,
        qq,
        dd1.title as job,
        dd2.title as source,
        if(e2.name is not null, e2.name, e.name)
        as inputUser,
        if(e2.id is not null, e2.id, e.id)
        as inputUserId
        from customer_contacts c
        left join
        dictionary_details dd1
        on c.job = dd1.id
        left join
        dictionary_details dd2
        on c.source = dd2.id
        left join
        employee e
        on e.id = c.inputUser
        left join (
        select *
        from (select *
        from customer_handover
        order by transTime
        desc
        Limit 10000)
        as chG
        group by customerID
        ) ch
        on ch.oldSeller = e.id
        and ch.customerID = c.id
        left join
        employee e2
        on e2.id = ch.newSeller
        where (c.name like concat('%',#{keyword},'%') or c.tel like concat('%',#{keyword},'%'))
        <if test="status != null">
            and c.status =#{status}
        </if>
        <if test="ceId != null">
        and c.customer_ent_id = #{ceId}
        </if>
    </select>

    <select id="getDetailById" resultType="com.yly.crm.entity.CustomerContacts">
        select c.id                                                as id,
               c.name                                              as name,
               c.gender                                            as gender,
               c.tel                                               as tel,
               c.qq                                                as qq,
               c.job                                               as job,
               c.source                                            as source,
               c.seller                                            as seller,
               if(ch.newSeller is null, c.inputUser, ch.newSeller) as inputUser
        from customer_contacts as c
                 left join (select *
                            from (select * from customer_handover order by transTime desc Limit 10000) as chG
                            group by customerID) ch on ch.customerID = c.id
        where c.id = #{id}
    </select>

    <select id="queryAnalysis" resultType="com.yly.crm.entity.Analysis">
        select
        <if test="aq.groupType == null or aq.groupType == 1 or aq.groupType == 0">
            count(cm.inputUser) as count,
            e.name as name
        </if>
        <if test="aq.groupType != null and aq.groupType > 1">
            count(cm.inputTime) as count,
        </if>
        <if test="aq.groupType != null and aq.groupType == 2">
            date_format(cm.inputTime,'%Y') as name
        </if>
        <if test="aq.groupType != null and aq.groupType == 3">
            date_format(cm.inputTime,'%Y-%m') as name
        </if>
        <if test="aq.groupType != null and aq.groupType == 4">
            date_format(cm.inputTime,'%Y-%m-%d') as name
        </if>
        from customer_contacts as cm
        left join employee e on cm.inputUser = e.id
        where e.name like concat('%',#{aq.name},'%')
        <if test="aq.startTime != null and aq.endTime != null">
            and cm.inputTime between #{aq.startTime} and #{aq.endTime}
        </if>
        <if test="aq.groupType == null or aq.groupType == 1 or aq.groupType == 0">
            group by e.name
        </if>
        <if test="aq.groupType != null and aq.groupType > 1">
            group by date_format(cm.inputTime,'%Y-%m')
        </if>
    </select>

</mapper>